@model Apartments_io.Areas.Manager.ViewModels.Bills.IndexViewModel

<h2>Bills</h2>

<!--Create-->
<h2>Create</h2>
<table>
    <thead>
        <tr>
            <th>Resident</th>
            <th>Apartment</th>
            <th>Apartment Img</th>
            <th>Create</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <select id="residents" class="form-control">
                    @foreach (User renter in Model.Renters)
                    {
                        <option value="@renter.Id">@renter.ToString()</option>
                    }
                </select>
            </td>

            <td>
                <select id="apartments"></select>
            </td>

            <td>
                <img src="~/uploads/files/apartment/noimage.png" id="apartment-image" width="150" height="100" />
            </td>
            <td>
                <button id="create-new-bill">Create</button>
            </td>
        </tr>
    </tbody>
</table>

<!--List of item-->
<h2>List</h2>
<table id="bills-list">
    <thead>
        <tr>
            <th>Resident</th>
            <th>Apartment img</th>
            <th>Apartment</th>
            <th>Status</th>
            <th>Update</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Bill bill in Model.Bills)
        {
            <tr data-id="@bill.Id">
                <td>
                    @bill.Renter.ToString()
                </td>
                <td>
                    <img src="@bill.Apartment.MainPhoto" width="150" height="100" />
                </td>
                <td>
                    @bill.Apartment.Name
                </td>
                <td>
                    <select class="bill-status form-control">
                        @foreach (DataAccess.Enums.PaymentStatus status in Enum.GetValues(typeof(DataAccess.Enums.PaymentStatus)))
                        {
                            @if (status == bill.PaymentStatus)
                            {
                                <option value="@(Convert.ToInt32(status))" selected>@status.GetText()</option>
                            }
                            else
                            {
                                <option value="@(Convert.ToInt32(status))">@status.GetText()</option>
                            }
                        }
                    </select>
                </td>
                <td>
                    <button class="btn-update">Update</button>
                </td>
            </tr>
        }
    </tbody>
</table>


<!--PAGINATION-->
<pagination-link pagination-model="Model.PaginationModel" controller-name="Bills" action-name="Index"></pagination-link>

@section Scripts
{
    <script>
        $(document).ready()
        {
            load_apartments("#apartments", $("#residents option:selected").val(), function () {
                load_apartment_image("#apartment-image", $("#apartments option:selected").val());
            });

        }
        $("#residents").change(function () {
            load_apartments("#apartments", $("#residents option:selected").val(), function () {
                load_apartment_image("#apartment-image", $("#apartments option:selected").val());
            });
        });
        $("#apartments").change(function () {
            const apartment_id = $(this).children("option:selected").val();

            load_apartment_image("#apartment-image", apartment_id);            
        });
        function load_apartment_image(image_selector, apartment_id){
            $.post('/Manager/Apartments/GetApartmentImage/',
                {
                    apartmentId: apartment_id
                }, function (data) {
                    $(image_selector).attr('src', data)
                });
        }
        function load_apartments(combobox_selector, user_id, callback) {
            $.post('/Manager/Apartments/GetApartmentsList/',
                {
                    userId: user_id,
                },
                function (data) {

                    const combobox = $(combobox_selector);
                    combobox.empty();
                    for (var i = 0; i < data.length; ++i) {
                        combobox.append('<option value="' + data[i].id + '">' + data[i].name + '</option>');
                    }

                    // call callback function
                    if (typeof callback === 'function') callback();
                });
        }

        // CREATE
        $("#create-new-bill").click(function () {

            $.post("/Manager/Bills/CreateNewBill/",
                {
                    residentId: $("#residents option:selected").val(),
                    apartmentId: $("#apartments").children("option:selected").val(),
                })
                .done(function () { location.reload(); })
                .fail(function () { alert("fail"); });
        });

        // UPDATE
        $("#bills-list tr").each(function () {
            const row = this;

            $(row).find(".btn-update").click(function () {
                $.post("/Manager/Bills/UpdateBill/",
                    {
                        billId: $(row).data("id"),
                        paymentStatus: $(row).find('.bill-status option:selected').val()

                    })
                    .done(function () { alert("updated") })
                    .fail(function () { alert("fail") });
            });
        });

    </script>

}